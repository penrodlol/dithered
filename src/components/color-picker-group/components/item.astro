---
import Button from '@/components/button.astro';
import type { HTMLAttributes } from 'astro/types';
import { twMerge } from 'tailwind-merge';

type Props = HTMLAttributes<'input'>;

const { class: className, ...props } = Astro.props;
---

<div
  class:list={[
    'group relative flex shrink-0 items-center justify-center',
    'transition-discrete duration-200 motion-safe:transition-[opacity_scale]',
    'scale-100 opacity-100 starting:scale-95 starting:opacity-0',
  ]}
>
  <input
    {...props}
    type="color"
    :name="name"
    :value="activePalette[$el.dataset.index] ?? '#000000'"
    @change="activePalette[$el.dataset.index] = $el.value; handleControlValue();"
    class={twMerge(
      'focusable size-8 rounded',
      '[&::-webkit-color-swatch]:rounded-border [&::-webkit-color-swatch-wrapper]:p-0',
      '[&::-moz-color-swatch]:rounded-border [&::-moz-focus-inner]:p-0',
      className,
    )}
  />
  <Button
    variant="brand-soft-outline"
    size="icon"
    icon="x"
    x-show="activePalette.length > 1"
    @click="activePalette = activePalette.filter((_,index) => index !== Number($el.previousElementSibling.dataset.index)); handleControlValue();"
    class:list={[
      'absolute -top-2 -right-2 size-5 rounded-full p-0 [&_svg]:size-3',
      'group-hover:transition-all group-hover:transition-discrete',
      'group-hover:opacity-100 group-hover:starting:opacity-0',
      'group-hover:scale-100 group-hover:starting:scale-95',
      'not-group-hover:hidden not-group-hover:transition-all not-group-hover:transition-discrete',
      'not-group-hover:opacity-0 not-group-hover:starting:opacity-100',
      'not-group-hover:scale-95 not-group-hover:starting:scale-100',
    ]}
  />
</div>
