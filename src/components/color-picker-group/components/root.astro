---
import { renderSlot } from '@/libs/component';
import type { HTMLAttributes } from 'astro/types';
import { twMerge } from 'tailwind-merge';

type Props = HTMLAttributes<'fieldset'> & {
  name: string;
  palettes: Record<string, Array<string>>;
  defaultPalette?: Array<string>;
  control?: string;
  controlValueOnChange?: string | undefined;
};

const { class: className, name, palettes, defaultPalette, control, controlValueOnChange, ...props } = Astro.props;
const html = renderSlot(await Astro.slots.render('default'), { 'input[type="color"]': { name: () => name } });
---

<fieldset
  {...props}
  set:html={html}
  class={twMerge('min-w-0', className)}
  x-init="control.addEventListener('change', (event) => activePalette = palettes[event.target.value])"
  x-data={`{
    control: document.querySelector("${control}"),
    controlValueOnChange: "${controlValueOnChange ?? ''}",
    activePalette: ${JSON.stringify(defaultPalette)},
    get palettes() { return ${JSON.stringify(palettes)} },
    handleControlValue() { this.control && this.controlValueOnChange.length && (this.control.value = this.controlValueOnChange) }
  }`}
/>
