---
import type { HTMLAttributes } from 'astro/types';
import { twMerge } from 'tailwind-merge';

type Props = HTMLAttributes<'input'>;

const { class: className, ...props } = Astro.props;
---

<div
  class={twMerge(
    'group/image-window-upload-root relative',
    'flex flex-col items-center justify-center gap-6',
    'rounded-border bg-gray-3/30 border-dashed shadow-2xl',
    className,
  )}
>
  <input
    {...props}
    type="file"
    class="absolute inset-0 cursor-pointer rounded opacity-0"
    @change={`
      reader.onload = (event) => {
        const file = $event.target.files?.[0];
        if (!file) return;

        src = event.target.result;
        name = file.name;
        type = file.type;
        lastModified = new Date(file.lastModified).toLocaleString();
        size = file.size > 1024 * 1024 ? (file.size / (1024 * 1024)).toFixed(2) + ' MB' : (file.size / 1024).toFixed(2) + ' KB';

        const image = $el.parentElement.querySelector('img');
        if (image) image.onload = () => dimensions = image.width + 'x' + image.height;
      };

      reader.readAsDataURL($event.target.files[0]);
    `}
  />
  <slot />
</div>
